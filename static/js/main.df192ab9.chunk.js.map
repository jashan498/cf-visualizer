{"version":3,"sources":["components/home.js","components/table.jsx","components/request.js","components/navBar.jsx","components/langPie.jsx","components/probBar.jsx","components/verdictPie.jsx","components/tagsDoughnut.jsx","components/subNav.jsx","components/loading.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","onClickPreventDefault","e","preventDefault","_this","props","onSubmit","_this2","this","react_default","a","createElement","className","type","placeholder","onChange","currentTarget","value","Component","mode","array","length","modeMap","maxCount","i","el","renderColor","rank","col","color","Table","getT1Data","sub","submissions","totalSub","Object","toConsumableArray","Set","map","c","problem","name","unsolved","filter","verdict","solved","contestId","getT2Data","contests","ranks","Math","min","apply","max","userInfo","t1","t2","scope","user","style","maxRank","_callee","username","apiUrl2","apiUrl3","_ref","_ref2","_ref3","info","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","abrupt","result","stop","request","NavBar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Link","to","onClick","options","legend","position","PieLang","state","filterData","keys","values","v","push","labels","slice","datasets","backgroundColor","hoverBackgroundColor","height","width","es","BarProblems","label","borderColor","borderWidth","hoverBorderColor","PieVerdict","DoughnutTags","SubNav","NavLink","LoadingScreen","show","GetHandle","userName","tuser","otherRoutes","searchedBefore","getUnsolvedProblems","console","log","programLang","plang","p","programmingLanguage","counts","num","probIndex","pindex","index","programVerdict","pverdict","programtags","tags","concat","setState","rData","localStorage","setItem","JSON","stringify","t0","message","toast","error","location","pathname","table","subNav","Switch","Route","exact","path","render","langPie","probBar","verdictPie","tagsDoughnut","redirectFromHome","Redirect","from","redirectHome","renderNavBar","navBar","parse","getItem","clear","loading","lib","home","withRouter","Boolean","window","hostname","match","ReactDOM","HashRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df192ab9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Home extends Component {\n  onClickPreventDefault = e => {\n    e.preventDefault();\n    this.props.onSubmit();\n  };\n\n  render() {\n    return (\n      <div className=\"ocontainer\">\n        <form\n          className=\"form-inline my-2 my-lg-0\"\n          onSubmit={this.onClickPreventDefault}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Search (eg. no_life_)\"\n            onChange={e => this.props.onChange(e.currentTarget.value)}\n          />\n          <div className=\"search\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nfunction mode(array) {\n    if(array.length === 0)\n        return null;\n    let modeMap = {};\n    let maxCount = 1;\n    for(let i = 0; i < array.length; i++)\n    {\n        let el = array[i];\n        if(!modeMap[el])\n            modeMap[el] = 1;\n        else\n            modeMap[el]++;  \n\n        if(modeMap[el] > maxCount)\n            maxCount = modeMap[el];\n\n    }\n    return maxCount;\n}\n\nfunction renderColor(rank) {\n  let col = \"Gray\";\n  if (rank===\"pupil\")\n    col=\"Green\";\n\n  else if (rank===\"specialist\")\n  col=\"Cyan\";\n\n  else if (rank===\"expert\")\n  col=\"Blue\";\n\n  else if (rank===\"candidate master\")\n  col=\"Violet\";\n\n  else if (rank===\"master\" || rank===\"international master\")\n  col=\"Orange\";\n\n  else if (rank===\"grandmaster\" || rank===\"international grandmaster\" || rank===\"legendary grandmaster\")\n  col=\"Red\";\n\n  return {color:col};\n\n}\n\n\nclass Table extends Component {\n\n  getT1Data = () => {\n    const sub = this.props.submissions;\n    const totalSub = [...new Set(sub.map(c=>c.problem.name))].length;\n    const unsolved = [...sub.filter(c=>c.verdict!==\"OK\")];\n    const solved = [...sub.filter(c=>c.verdict===\"OK\").map(c=>c.contestId)];\n\n    return [totalSub, sub.length-unsolved.length, mode(solved)]\n  }\n\n  getT2Data = () => {\n    const contests = this.props.contests;\n    // const totalCont = contests.length;\n    const ranks = contests.map(c=>c.rank);\n    return [contests.length, Math.min.apply(null, ranks), Math.max.apply(null, ranks)]\n  }\n\n  render() {\n    // console.log(\"hey \", this.props.submissions);\n    const userInfo = this.props.userInfo[0]\n    const t1 = this.getT1Data();\n    // const {t1} = this.state;\n    const t2 = this.getT2Data();\n    // console.log(userInfo)\n    return (\n      <div className=\"table-responsive tcontainer\">\n        <table className=\"table table-striped\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">Some numbers about</th>\n              <th scope=\"col\">{this.props.user}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"trg\">\n              <th scope=\"row\">Tried</th>\n              <td>{t1[0]}</td>\n            </tr>\n            <tr className=\"trg\">\n              <th scope=\"row\">Solved</th>\n              <td>{t1[1]}</td>\n            </tr>\n            <tr className=\"trg\">\n              <th scope=\"row\">Max attempts</th>\n              <td>{t1[2]}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"table table-striped\">\n          <thead className=\"thead-dark\">\n            <tr className=\"trg\">\n              <th scope=\"col\">Contests of</th>\n              <th scope=\"col\">{this.props.user}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"trg\">\n              <th scope=\"row\">Number of contests</th>\n              <td>{t2[0]}</td>\n            </tr>\n            <tr className=\"trg\">\n              <th scope=\"row\">Best Rank</th>\n              <td>{t2[1]}</td>\n            </tr>\n            <tr className=\"trg\">\n              <th scope=\"row\">Worst Rank</th>\n              <td>{t2[2]}</td>\n            </tr>\n          </tbody>\n        </table>\n        <table className=\"table table-borderless\">\n        <tbody>\n            <tr>\n              <th scope=\"row\">Current Rank</th>\n              <td style={renderColor(userInfo.rank)}>{userInfo.rank}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Best Rank</th>\n              <td style={renderColor(userInfo.rank)}>{userInfo.maxRank}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import axios from \"axios\";\n\nasync function request(username) {\n  const apiUrl1 = \"https://codeforces.com/api/user.status?handle=\";\n  const apiUrl2 = \"https://codeforces.com/api/user.rating?handle=\";\n  const apiUrl3 = \"https://codeforces.com/api/user.info?handles=\";\n  const { data:submissions } = await axios.get(apiUrl1 + username);\n  const { data:contests } = await axios.get(apiUrl2 + username);\n  const { data:info } = await axios.get(apiUrl3 + username);\n  //   console.log(\"alta\", data.result);\n  return [submissions.result, contests.result, info.result];\n}\n\nexport default request;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst onClickPreventDefault = e => {\n  e.preventDefault();\n};\n\nconst NavBar = props => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <a\n        className=\"navbar-brand\"\n        href=\"https://jashan498.github.io/cf-visualizer\"\n      >\n        CodeForces Visualizer\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <form\n          className=\"form-inline my-2 my-lg-0\"\n          onSubmit={onClickPreventDefault}\n        >\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search username\"\n            onChange={e => props.onChange(e.currentTarget.value)}\n          />\n          <Link to=\"/lang\">\n            <button\n              className=\"btn btn-outline-light my-2 my-sm-0\"\n              type=\"submit\"\n              onClick={props.onSubmit}\n            >\n              Search\n            </button>\n          </Link>\n        </form>\n        <a\n          href=\"https://github.com/jashan498/cf-visualizer\"\n          className=\"ml-auto\"\n        >\n          <button className=\"btn btn-outline-light my-2 my-sm-0\" type=\"submit\">\n            {\" \"}\n            Source\n          </button>\n        </a>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\n\nconst options = {\n  legend: {\n    position: \"right\"\n  }\n};\n\nclass PieLang extends Component {\n  state = {\n    data: []\n  };\n\n  filterData = () => {\n    const sub = this.props.data;\n    const keys = [];\n    const values = [];\n    for (let v in sub) {\n      keys.push(v);\n      values.push(sub[v]);\n    }\n    let data = {};\n    data.labels = keys.slice();\n    data.datasets = [\n      {\n        data: values.slice(),\n        backgroundColor: [\n          \"#FF6384\",\n          \"#36A2EB\",\n          \"#FFCE56\",\n          \"#43A19E\",\n          \"#7B43A1\",\n          \"#F2317A\",\n          \"#FF9824\",\n          \"#58CF6C\",\n          \"#8BC34A\",\n          \"#CDDC39\",\n          \"#FFC107\",\n          \"#FF9800\",\n          \"#FF5722\",\n          \"#795548\",\n          \"#607D8B\",\n          \"#E65100\",\n          \"#827717\",\n          \"#004D40\",\n          \"#1A237E\",\n          \"#6200EA\",\n          \"#3F51B5\",\n          \"#F50057\",\n          \"#304FFE\",\n          \"#b71c1c\"\n        ],\n        hoverBackgroundColor: [\n          \"#FF6384\",\n          \"#36A2EB\",\n          \"#FFCE56\",\n          \"#0c6db3\",\n          \"#4682B4\",\n          \"#00FFFF\",\n          \"#0099FF\",\n          \"#3E3BF5\"\n        ]\n      }\n    ];\n    return data;\n  };\n\n  render() {\n    return (\n      <div style={{ position: \"relative\", height: \"30vh\", width: \"50vw\" }}>\n        <Pie data={this.filterData()} options={options} />\n      </div>\n    );\n  }\n}\n\nexport default PieLang;\n","import React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\n// const data = {\n//   labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n//   datasets: [\n//     {\n//       label: \"My First dataset\",\n//       backgroundColor: \"rgba(255,99,132,0.2)\",\n//       borderColor: \"rgba(255,99,132,1)\",\n//       borderWidth: 1,\n//       hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n//       hoverBorderColor: \"rgba(255,99,132,1)\",\n//       data: [65, 59, 80, 81, 56, 55, 40]\n//     }\n//   ]\n// };\n\nconst options = {\n  legend: {\n    position: \"right\"\n  }\n};\n\nclass BarProblems extends Component {\n  state = {\n    data: []\n  };\n\n  filterData = () => {\n    const sub = this.props.data;\n    const keys = [];\n    const values = [];\n    for (let v in sub) {\n      keys.push(v);\n      values.push(sub[v]);\n    }\n    let data = {};\n    data.labels = keys.slice();\n    data.datasets = [\n      {\n        data: values.slice(),\n        label: \"Problem Type\",\n        backgroundColor: \"rgba(255,99,132,0.2)\",\n        borderColor: \"rgba(255,99,132,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n        hoverBorderColor: \"rgba(255,99,132,1)\"\n      }\n    ];\n    return data;\n  };\n\n  render() {\n    return (\n      <div style={{ position: \"relative\", height: \"30vh\", width: \"50vw\" }}>\n        <Bar\n          data={this.filterData()}\n          //   width={200}\n          //   height={350}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BarProblems;\n","import React, { Component } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\n\nconst options = {\n  legend: {\n    position: \"right\"\n  }\n};\n\nclass PieVerdict extends Component {\n  state = {\n    data: []\n  };\n\n  filterData = () => {\n    const sub = this.props.data;\n    const keys = [];\n    const values = [];\n    for (let v in sub) {\n      keys.push(v);\n      values.push(sub[v]);\n    }\n    let data = {};\n    data.labels = keys.slice();\n    data.datasets = [\n      {\n        data: values.slice(),\n        backgroundColor: [\n          \"#FF6384\",\n          \"#36A2EB\",\n          \"#FFCE56\",\n          \"#43A19E\",\n          \"#7B43A1\",\n          \"#F2317A\",\n          \"#FF9824\",\n          \"#58CF6C\",\n          \"#8BC34A\",\n          \"#CDDC39\",\n          \"#FFC107\",\n          \"#FF9800\",\n          \"#FF5722\",\n          \"#795548\",\n          \"#607D8B\"\n        ],\n        hoverBackgroundColor: [\n          \"#FF6384\",\n          \"#36A2EB\",\n          \"#FFCE56\",\n          \"#0c6db3\",\n          \"#4682B4\",\n          \"#00FFFF\",\n          \"#0099FF\",\n          \"#3E3BF5\"\n        ]\n      }\n    ];\n    return data;\n  };\n\n  render() {\n    return (\n      <div style={{ position: \"relative\", height: \"30vh\", width: \"50vw\" }}>\n        <Pie data={this.filterData()} options={options} />\n      </div>\n    );\n  }\n}\n\nexport default PieVerdict;\n","import React, { Component } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst options = {\n  legend: {\n    position: \"right\"\n  }\n};\n\nclass DoughnutTags extends Component {\n  state = {\n    data: []\n  };\n\n  filterData = () => {\n    const sub = this.props.data;\n    const keys = [];\n    const values = [];\n    for (let v in sub) {\n      keys.push(v);\n      values.push(sub[v]);\n    }\n    let data = {};\n    data.labels = keys.slice();\n    data.datasets = [\n      {\n        data: values.slice(),\n        backgroundColor: [\n          \"#FF6384\",\n          \"#36A2EB\",\n          \"#FFCE56\",\n          \"#43A19E\",\n          \"#7B43A1\",\n          \"#F2317A\",\n          \"#FF9824\",\n          \"#58CF6C\",\n          \"#8BC34A\",\n          \"#CDDC39\",\n          \"#FFC107\",\n          \"#FF9800\",\n          \"#FF5722\",\n          \"#795548\",\n          \"#607D8B\",\n          \"#E65100\",\n          \"#827717\",\n          \"#004D40\",\n          \"#1A237E\",\n          \"#6200EA\",\n          \"#3F51B5\",\n          \"#F50057\",\n          \"#304FFE\",\n          \"#b71c1c\",\n          \"#FF6384\",\n          \"#36A2EB\",\n          \"#FFCE56\",\n          \"#0c6db3\",\n          \"#4682B4\",\n          \"#00FFFF\",\n          \"#0099FF\",\n          \"#3E3BF5\",\n          \"#827717\",\n          \"#3F51B5\",\n          \"#8BC34A\",\n          \"#F2317A\"\n        ],\n        hoverBackgroundColor: [\n          \"#FF6384\",\n          \"#36A2EB\",\n          \"#FFCE56\",\n          \"#0c6db3\",\n          \"#4682B4\",\n          \"#00FFFF\",\n          \"#0099FF\",\n          \"#3E3BF5\"\n        ]\n      }\n    ];\n    return data;\n  };\n\n  render() {\n    return (\n      <div style={{ position: \"relative\", height: \"30vh\", width: \"50vw\" }}>\n        <Doughnut data={this.filterData()} options={options} />\n      </div>\n    );\n  }\n}\n\nexport default DoughnutTags;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nclass SubNav extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light  navbar-transparent\">\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <div className=\"navbar-nav\">\n            <NavLink className=\"nav-item nav-link\" to=\"/lang\">\n              Languages Used\n            </NavLink>\n            <NavLink className=\"nav-item nav-link\" to=\"/category\">\n              Problem type\n            </NavLink>\n            <NavLink className=\"nav-item nav-link\" to=\"/verdict\">\n              Verdicts\n            </NavLink>\n            <NavLink className=\"nav-item nav-link\" to=\"/tags\">\n              Tags\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default SubNav;\n","import React, { Component } from \"react\";\n\nclass LoadingScreen extends Component {\n  render() {\n    if (!this.props.show) return null;\n    return (\n      <div className=\"lcontainer\">\n        <div className=\"item item-1\" />\n        <div className=\"item item-2\" />\n        <div className=\"item item-3\" />\n        <div className=\"item item-4\" />\n      </div>\n    );\n  }\n}\n\nexport default LoadingScreen;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport Table from \"./components/table\";\nimport request from \"./components/request\";\nimport NavBar from \"./components/navBar\";\nimport PieLang from \"./components/langPie\";\nimport BarProblems from \"./components/probBar\";\nimport PieVerdict from \"./components/verdictPie\";\nimport DoughnutTags from \"./components/tagsDoughnut\";\nimport SubNav from \"./components/subNav\";\nimport LoadingScreen from \"./components/loading\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { withRouter } from \"react-router-dom\";\n\nclass GetHandle extends Component {\n  state = {\n    userName: \"\",\n    tuser: \"\",\n    submissions: [],\n    contests: [],\n    userInfo: [],\n    show: false,\n    otherRoutes: false,\n    searchedBefore: false\n  };\n\n  // For Bar chart\n  getUnsolvedProblems = () => {\n    const submissions = this.state.submissions\n      .filter(c => c.verdict !== \"OK\")\n      .map(c => c.id);\n    console.log(submissions);\n    return submissions;\n  };\n\n  // For Language Pie chart\n  programLang = () => {\n    const plang = this.state.submissions.map(p => p.programmingLanguage);\n    let counts = {};\n    for (let i = 0; i < plang.length; i++) {\n      let num = plang[i];\n      counts[num] = counts[num] ? counts[num] + 1 : 1;\n    }\n    // console.log(counts);\n    return counts;\n  };\n\n  // For Bar chart\n  probIndex = () => {\n    const submissions = this.state.submissions.filter(c => c.verdict === \"OK\");\n    const pindex = submissions.map(p => p.problem.index);\n    let counts = {};\n    for (let i = 0; i < pindex.length; i++) {\n      let num = pindex[i];\n      counts[num] = counts[num] ? counts[num] + 1 : 1;\n    }\n    return counts;\n  };\n\n  // For Verdict Pie chart\n  programVerdict = () => {\n    const pverdict = this.state.submissions.map(p => p.verdict);\n    let counts = {};\n    for (let i = 0; i < pverdict.length; i++) {\n      let num = pverdict[i];\n      counts[num] = counts[num] ? counts[num] + 1 : 1;\n    }\n    return counts;\n  };\n\n  // Tags for Doughnut\n  programtags = () => {\n    let tags = this.state.submissions.map(p => p.problem.tags);\n    tags = [].concat.apply([], tags);\n    let counts = {};\n    for (let i = 0; i < tags.length; i++) {\n      let num = tags[i];\n      counts[num] = counts[num] ? counts[num] + 1 : 1;\n    }\n    return counts;\n  };\n\n  onChange = e => {\n    this.setState({ tuser: e });\n  };\n\n  componentDidMount() {\n    if (this.state.searchedBefore) {\n      const submissions = JSON.parse(localStorage.getItem(\"submissions\"));\n      const contests = JSON.parse(localStorage.getItem(\"contests\"));\n      const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n      const userName = localStorage.getItem(\"userName\");\n      const otherRoutes =\n        localStorage.getItem(\"otherRoutes\") === \"false\" ? false : true;\n      this.setState({\n        submissions,\n        contests,\n        userInfo,\n        userName,\n        otherRoutes\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    localStorage.clear();\n  }\n\n  onSubmit = async () => {\n    this.setState({ show: true });\n    try {\n      const rData = await request(this.state.tuser);\n      this.setState({\n        submissions: rData[0],\n        contests: rData[1],\n        userInfo: rData[2],\n        userName: this.state.tuser,\n        show: false,\n        otherRoutes: true\n      });\n\n      // Store current state in local storage so that it can be fetched\n      // even after the page is reloaded.\n      localStorage.setItem(\"submissions\", JSON.stringify(rData[0]));\n      localStorage.setItem(\"contests\", JSON.stringify(rData[1]));\n      localStorage.setItem(\"userInfo\", JSON.stringify(rData[2]));\n      localStorage.setItem(\"userName\", this.state.tuser);\n      localStorage.setItem(\"show\", \"false\");\n      localStorage.setItem(\"otherRoutes\", \"true\");\n      this.setState({ searchedBefore: true });\n      console.log(this.state);\n    } catch (ex) {\n      this.setState({ show: false });\n      if (ex.message === \"Network Error\") toast.error(\"Invalid Username\");\n    }\n  };\n\n  otherRoutes = () => {\n    if (this.props.location.pathname === \"/\") return null;\n    if (!this.state.otherRoutes) return null;\n    return (\n      <div className=\"row above\">\n        <div className=\"col-md-4 col-xs-12 alig\">\n          <Table\n            user={this.state.userName}\n            submissions={this.state.submissions}\n            contests={this.state.contests}\n            userInfo={this.state.userInfo}\n          />\n        </div>\n        <div className=\"col-md-8 col-xs-12\">\n          <SubNav />\n          <Switch>\n            <Route\n              exact\n              path=\"/lang\"\n              render={() => <PieLang data={this.programLang()} />}\n            />\n            <Route\n              exact\n              path=\"/category\"\n              render={() => <BarProblems data={this.probIndex()} />}\n            />\n            <Route\n              exact\n              path=\"/verdict\"\n              render={() => <PieVerdict data={this.programVerdict()} />}\n            />\n            <Route\n              exact\n              path=\"/tags\"\n              render={() => <DoughnutTags data={this.programtags()} />}\n            />\n          </Switch>\n        </div>\n      </div>\n    );\n  };\n\n  redirectFromHome = () => {\n    if (this.state.otherRoutes) return <Redirect from=\"/\" to=\"/lang\" />;\n  };\n\n  redirectHome = () => {\n    if (this.state.otherRoutes) return <Redirect to=\"/\" />;\n  };\n\n  renderNavBar = () => {\n    if (this.state.otherRoutes && !(this.props.location.pathname === \"/\"))\n      return <NavBar onChange={this.onChange} onSubmit={this.onSubmit} />;\n    else\n      return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n          <a\n            className=\"navbar-brand\"\n            href=\"https://jashan498.github.io/cf-visualizer\"\n          >\n            CodeForces Visualizer\n          </a>\n          <a\n            href=\"https://github.com/jashan498/cf-visualizer\"\n            className=\"ml-auto\"\n          >\n            <button\n              className=\"btn btn-outline-light my-2 my-sm-0\"\n              type=\"submit\"\n            >\n              {\" \"}\n              Source\n            </button>\n          </a>\n        </nav>\n      );\n  };\n\n  render() {\n    if (this.state.show)\n      return (\n        <div>\n          {this.renderNavBar()}\n          <div className=\"container lmar\">\n            <LoadingScreen show={this.state.show} />\n          </div>\n        </div>\n      );\n    return (\n      <div>\n        {this.renderNavBar()}\n        <div className=\"container lmar\">\n          <ToastContainer />\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Home onChange={this.onChange} onSubmit={this.onSubmit} />\n            )}\n          />\n          {this.redirectFromHome()}\n          {this.otherRoutes()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(GetHandle);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}